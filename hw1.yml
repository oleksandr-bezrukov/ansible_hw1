#- hosts: all
#  vars_files:
#    - ./external_vars.yml

- hosts: ans-app
  tasks:
    - name: Install nodejs
      apt:
        name: ['npm=3.5.2-0ubuntu4']
        state: present
        update_cache: yes
      become: yes

- hosts: ans-nginx
  tasks:
    - name: Install nginx with dependencies
      apt:
        name: ['nginx=1.14.0-0ubuntu1.9']
        state: present
        update_cache: yes
#      with_items:
#        - nginx=1.14.0-0ubuntu1.9
      become: yes
      
    - name: copy the nginx config file
      copy:
        src: nginx/nginx.conf
        dest: /etc/nginx/nginx.conf
      become: yes
    - name: copy the nginx config file
      copy:
        src: nginx/fwd.conf
        dest: /etc/nginx/conf.d
      become: yes
    - name: set web application ip
      replace:
        path: /etc/nginx/conf.d/fwd.conf
        regexp: '^(\s*server_name )nginx_fqdn(;\s*)$'
        replace: '\1{{nginx_fqdn}}\2'
      become: yes
#        validate: '/usr/sbin/apache2ctl -f %s -t'
      
    - name: Create a directory for certificates if it does not exist
      file:
        path: "{{path2cert}}"
        state: directory
        mode: '0755'
      become: yes      
    - name: check if certificate exists
      stat:
        path: "{{path2cert}}/certificate.pem"
      register: nginx_cert
    - name: create nginx cert if not exists
      shell: "openssl req -x509 -newkey rsa:2048 -nodes -keyout {{path2cert}}/privkey.pem  -days 36500 -out {{path2cert}}/certificate.pem -subj '/C=US/ST=NRW/L=Earth/O=CompanyName/OU=IT/CN={{nginx_fqdn}}/emailAddress=email@example.com'"
      when: not nginx_cert.stat.exists
      become: yes
      
    - name: Check NGINX configs
      shell: "/usr/sbin/nginx -t"
      register: nginx_config_status
      become: yes
#    - name: NGINX test status
#      debug:
#        msg: "{{ nginx_config_status }}"
    - name: NGINX test status
      debug:
        msg: "{{ nginx_config_status.rc }}"
    - name: Service NGINX restart and enable on boot
      systemd:
        name: nginx
        state: restarted
        enabled: yes
        daemon_reload: yes
      when: nginx_config_status.rc == 0
      become: yes
